MEMORY {
	ZP:		start = $0000, size = $0100, type = rw;
	IO:     start = $4000, size = $4000, type = rw;
	BASROM:		start = $8000, size = $7FFA, fill = yes, file = %O;
	RESETVEC:   start = $FFFA, size = 6, fill = yes, file = %O;
	DUMMY:		start = $0000, size = $00FF, file = "";
}

SEGMENTS {
    BIOS_DATA:  load = ZP, type = zp;
	ZEROPAGE:	load = ZP, type = zp;
	BIOS_IO:    load = IO, type = bss;
	HEADER:		load = BASROM,	type = ro;
	VECTORS:	load = BASROM,	type = ro;
	KEYWORDS:	load = BASROM,	type = ro;
	ERROR:		load = BASROM,	type = ro;
	CODE:		load = BASROM,	type = ro;
	CHRGET:		load = BASROM,	type = ro;
	INIT:		load = BASROM,	type = ro;
	EXTRA:		load = BASROM,	type = ro;
	DUMMY:		load = DUMMY; # don't include

	BIOS_CODE:  load = BASROM,  type = ro;
	RESETVEC:   load = RESETVEC, type = ro;
}

